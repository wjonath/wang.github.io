{"meta":{"title":"汪汪","subtitle":null,"description":null,"author":"Jonath","url":"http://www.iqoo.cn"},"pages":[{"title":"","date":"2018-06-08T07:37:22.000Z","updated":"2018-06-08T07:37:46.527Z","comments":true,"path":"about/index.html","permalink":"http://www.iqoo.cn/about/index.html","excerpt":"","text":"关于 contact： mail：jonath@163.com tel： github: https://wjonath.github.com blog: https://wjonath.github.io"},{"title":"","date":"2018-06-25T03:43:33.556Z","updated":"2018-05-14T08:29:27.151Z","comments":true,"path":"archives/index.html","permalink":"http://www.iqoo.cn/archives/index.html","excerpt":"","text":"archive"},{"title":"","date":"2018-05-13T22:29:10.000Z","updated":"2018-05-14T10:30:41.864Z","comments":true,"path":"categories/index.html","permalink":"http://www.iqoo.cn/categories/index.html","excerpt":"","text":"categories"},{"title":"","date":"2018-06-25T03:43:33.557Z","updated":"2018-05-14T08:29:27.151Z","comments":true,"path":"tags/index.html","permalink":"http://www.iqoo.cn/tags/index.html","excerpt":"","text":"tags"}],"posts":[{"title":"docker之阿里云","slug":"docker之阿里云","date":"2018-06-10T05:08:00.000Z","updated":"2018-06-10T05:09:46.059Z","comments":true,"path":"2018/06/10/docker之阿里云/","link":"","permalink":"http://www.iqoo.cn/2018/06/10/docker之阿里云/","excerpt":"","text":"登录阿里云docker registry:1$ sudo docker login --username=xxx@163.com registry.cn-hangzhou.aliyuncs.com 登录registry的用户名是您的阿里云账号全名，密码是您开通服务时设置的密码。 你可以在镜像管理首页点击右上角按钮修改docker login密码。 从registry中拉取镜像：1$ sudo docker pull registry.cn-hangzhou.aliyuncs.com/jonath/dokuwiki:[镜像版本号] 将镜像推送到registry：123$ sudo docker login --username= registry.cn-hangzhou.aliyuncs.com$ sudo docker tag [ImageId] registry.cn-hangzhou.aliyuncs.com/jonath/dokuwiki:[镜像版本号]$ sudo docker push registry.cn-hangzhou.aliyuncs.com/jonath/dokuwiki:[镜像版本号] 其中[ImageId],[镜像版本号]请你根据自己的镜像信息进行填写。注意您的网络环境 从ECS推送镜像时，可以选择走内网，速度将大大提升，并且将不会损耗您的公网流量。 如果您申请的机器是在经典网络，请使用 registry-internal.cn-hangzhou.aliyuncs.com 作为registry的域名登录, 并作为镜像名空间前缀 如果您申请的机器是在vpc网络的，请使用 registry-vpc.cn-hangzhou.aliyuncs.com 作为registry的域名登录, 并作为镜像名空间前缀 sample: 使用docker tag重命名镜像，并将它通过私网ip推送至registry：1$ sudo docker images REPOSITORY TAG IMAGE ID CREATED VIRTUAL SIZE registry.aliyuncs.com/acs/agent 0.7-dfb6816 37bb9c63c8b2 7 days ago 37.89 MB1$ sudo docker tag 37bb9c63c8b2 registry-internal.cn-hangzhou.aliyuncs.com/acs/agent:0.7-dfb6816 通过docker images 找到您的imageId 并对于改imageId重命名镜像domain到registry内网地址。1$ sudo docker push registry-internal.cn-hangzhou.aliyuncs.com/acs/agent:0.7-dfb6816","categories":[{"name":"docker","slug":"docker","permalink":"http://www.iqoo.cn/categories/docker/"}],"tags":[{"name":"docker aliyun","slug":"docker-aliyun","permalink":"http://www.iqoo.cn/tags/docker-aliyun/"}]},{"title":"dokuwiki配置说明","slug":"dokuwiki配置说明","date":"2018-06-10T03:59:00.000Z","updated":"2018-06-10T04:17:28.097Z","comments":true,"path":"2018/06/10/dokuwiki配置说明/","link":"","permalink":"http://www.iqoo.cn/2018/06/10/dokuwiki配置说明/","excerpt":"","text":"配置sidebar通过 welcome 页面进入 sidebar，编辑页面内容：1&#123;&#123;indexmenu&gt;..#1|js navbar nocookie&#125;&#125; 保存后，安装 indexmenu 插件更详细的配置参见：https://www.dokuwiki.org/plugin:indexmenu 安装插件 upgrade Bootstrap3 Template codedoc move/pagemove addnewpage","categories":[{"name":"other","slug":"other","permalink":"http://www.iqoo.cn/categories/other/"}],"tags":[{"name":"wiki","slug":"wiki","permalink":"http://www.iqoo.cn/tags/wiki/"}]},{"title":"vmware+centos文件共享","slug":"vmware-centos文件共享","date":"2018-06-07T11:23:00.000Z","updated":"2018-06-07T11:25:49.549Z","comments":true,"path":"2018/06/07/vmware-centos文件共享/","link":"","permalink":"http://www.iqoo.cn/2018/06/07/vmware-centos文件共享/","excerpt":"","text":"先安装包依赖： 12yum -y install kernel-devel-$(uname -r) yum -y install net-tools perl gcc gcc-c++ 安装vm tools 123456mount /dev/cdrom /home/tmpcp /home/tmp/VMwareTools-9.6.0-1294478.tar.gz /tmpcd /tmptar -zxvf VMwareTools-9.6.0-1294478.tar.gzcd vmware-tools-distrib./vmware-install.pl 有/mnt/hgfs但没有共享文件的解决方法： 12mount -t vmhgfs .host:/ /mnt/hgfsError: cannot mount filesystem: No such device 这时不能用mount工具挂载，而是得用vmhgfs-fuse，需要安装工具包 123yum install open-vm-tools-devel -y有的源的名字并不一定为open-vm-tools-devel(centos) ，而是open-vm-dkms(unbuntu)执行：vmhgfs-fuse .host:/ /mnt/hgfs","categories":[{"name":"system","slug":"system","permalink":"http://www.iqoo.cn/categories/system/"}],"tags":[{"name":"centos vmware","slug":"centos-vmware","permalink":"http://www.iqoo.cn/tags/centos-vmware/"}]},{"title":"ubuntu 18.04安装最新的docker","slug":"ubuntu-18-04安装最新的docker","date":"2018-06-05T06:47:00.000Z","updated":"2018-06-05T06:58:30.972Z","comments":true,"path":"2018/06/05/ubuntu-18-04安装最新的docker/","link":"","permalink":"http://www.iqoo.cn/2018/06/05/ubuntu-18-04安装最新的docker/","excerpt":"","text":"docker-compse：可运行和管理多个docker容器。docker-machine：docker官方提供的docker管理工具。可管理多个docker主机，可搭建swarm集群。 docker 安装 卸载旧版本docker 1sudo apt-get remove docker docker-engine docker.io 更新系统软件 1sudo apt-get update 安装依赖包 12345sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ software-properties-common 添加官方秘钥执行该命令时，如遇到长时间没有响应说明网络连接不到docker网站，需要使用代理进行。 1curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - 添加仓库 1234sudo add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable\" 再次更新系统软件 1sudo apt-get update 安装docker如果想指定安装某一版本，可使用 sudo apt-get install docker-ce={VERSION} 命令，把{VERSION}替换为具体版本即可。以下命令没有指定版本，默认就会安装最新版 1sudo apt-get install docker docker.io 查看docker版本 1docker -v docker-compose安装 下载 docker-compose参见：https://github.com/docker/compose/releases 1sudo curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose 授权 1sudo chmod +x /usr/local/bin/docker-compose 查看版本信息 1docker-compose --version docker-machine安装说明：docker-machine的使用是要基于virtualBox的。如果没有安装安装过，请先安装virtualBox。 登录virtualBox官网：https://www.virtualbox.org/wiki/Linux_Downloads找到”Ubuntu 18.04 (“Xenial”) i386 | AMD64”字样，点击“AMD64”进行下载。下载后，执行以下命令进行安装： 1sudo dpkg -i virtualbox-5.2_5.2.0-118431_Ubuntu_xenial_amd64.deb 下载并安装docker-machine 123curl -L https://github.com/docker/machine/releases/download/v0.13.0/docker-machine-`uname -s`-`uname -m` &gt;/tmp/docker-machine &amp;&amp;chmod +x /tmp/docker-machine &amp;&amp;sudo cp /tmp/docker-machine /usr/local/bin/docker-machine 查看版本信息 1docker-machine version","categories":[],"tags":[{"name":"docker","slug":"docker","permalink":"http://www.iqoo.cn/tags/docker/"}]},{"title":"mysql高可用之MHA的搭建","slug":"mysql高可用之MHA的搭建","date":"2018-06-01T06:43:00.000Z","updated":"2018-06-05T04:26:20.879Z","comments":true,"path":"2018/06/01/mysql高可用之MHA的搭建/","link":"","permalink":"http://www.iqoo.cn/2018/06/01/mysql高可用之MHA的搭建/","excerpt":"","text":"3节点，服务器环境 centos 7.5, mysql 5.7, 同步节点时间 安装perl mysql模块，可以使用yum，需先安装epel源 1yum install perl-DBD-MySQL -y 安装MHA： github地址：https://github.com/yoshinorim/mha4mysql-manager google地址：https://code.google.com/p/mysql-master-ha/wiki/Downloads?tm=2（自备梯子） 3台机器上都要安装 mha4mysql-node 1rpm -ivh mha4mysql-node-0.58-0.el7.centos.noarch.rpm 管理机器上安装 mha4mysql-manager 1rpm -ivh mha4mysql-manager-0.58-0.el7.centos.noarch.rpm 脚本管理，均在 app1.cnf 文件中进行配置 1234master_ip_failover #自动切换时vip管理的脚本，不是必须，如果我们使用keepalived的，我们可以自己编写脚本完成对vip的管理，比如监控mysql，如果mysql异常,我们停止keepalived就行，这样vip就会自动漂移master_ip_online_change #在线切换时vip的管理，不是必须，同样可以可以自行编写简单的shell完成power_manager #故障发生后关闭主机的脚本，不是必须send_report #因故障切换后发送报警的脚本，不是必须，可自行编写简单的shell完成 遇见的一些错误总结 Can’t exec “mysqlbinlog”: 1Can't exec \"mysqlbinlog\": No such file or directory at /usr/share/perl5/vendor_perl/MHA/BinlogManager.pm line 106. mysqlbinlog version command failed with rc 1:0, please verify PATH, LD_LIBRARY_PATH, and client options at /usr/bin/apply_diff_relay_logs line 532. 解决方案： 12type mysqlbinlogln -s /usr/local/mysql/bin/mysqlbinlog /usr/bin/mysqlbinlog MHA只能应对一次故障转移，并会在配置的 manager_workdir 目录下生产记录文件，如果要再次启用请清理该目录下 app1.failover.complete 文件","categories":[],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://www.iqoo.cn/tags/mysql/"},{"name":"mha","slug":"mha","permalink":"http://www.iqoo.cn/tags/mha/"}]},{"title":"mysql一主多从搭建","slug":"mysql一主多从搭建","date":"2018-06-01T01:36:00.000Z","updated":"2018-06-04T07:56:48.022Z","comments":true,"path":"2018/06/01/mysql一主多从搭建/","link":"","permalink":"http://www.iqoo.cn/2018/06/01/mysql一主多从搭建/","excerpt":"","text":"mysql 5.7一主多从搭建 安装好mysql并开启bin-log，修改 my.cnf 设置丛库只读 1read_only=ON SSH密钥登录方式设置，3台机器需要相互授权，包括自己本身这台 1234ssh-keygen -t rsassh-copy-id -i /root/.ssh/id_rsa.pub root@192.168.11.128ssh-copy-id -i /root/.ssh/id_rsa.pub root@192.168.11.129ssh-copy-id -i /root/.ssh/id_rsa.pub root@192.168.11.130 创建mysql数据复制的账号，并授权： 1GRANT REPLICATION SLAVE ON *.* TO 'repl'@'192.168.%' IDENTIFIED BY 'repl'; 找到master的bin-log位置 1show master logs; 根据上面找到的信息设置slave，清空主库日志命令：flush logs; 123stop slave;CHANGE MASTER TO MASTER_HOST='192.168.11.129',MASTER_USER='repl', MASTER_PASSWORD='repl', MASTER_LOG_FILE='mysql-bin.000007',MASTER_LOG_POS=154;start slave; 遇到的一些错误 克隆虚拟机的时候，slave会出现重复的uuid，把 auto.cnf 文件删除，重启mysql会自动生成新的uuid","categories":[{"name":"database","slug":"database","permalink":"http://www.iqoo.cn/categories/database/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://www.iqoo.cn/tags/mysql/"}]},{"title":"mysql开启bin-log日志","slug":"mysql开启bin-log日志","date":"2018-05-31T15:37:00.000Z","updated":"2018-05-31T15:39:27.504Z","comments":true,"path":"2018/05/31/mysql开启bin-log日志/","link":"","permalink":"http://www.iqoo.cn/2018/05/31/mysql开启bin-log日志/","excerpt":"","text":"开启mysql的bin-log日志编辑 my.cnf 文件，加入：1log-bin=/var/lib/mysql/mysql-bin 重启mysql，登录，查看1show variables like '%log_bin%'; 若log_bin 状态为 on，则开启成功","categories":[],"tags":[{"name":"bin-log","slug":"bin-log","permalink":"http://www.iqoo.cn/tags/bin-log/"}]},{"title":"linux下安装mysql5.7压缩版","slug":"linux下安装mysql5-7压缩版","date":"2018-05-31T13:00:00.000Z","updated":"2018-05-31T13:24:02.883Z","comments":true,"path":"2018/05/31/linux下安装mysql5-7压缩版/","link":"","permalink":"http://www.iqoo.cn/2018/05/31/linux下安装mysql5-7压缩版/","excerpt":"","text":"linux下安装mysql5.7的压缩版 下载安装包并解压 解压后拷贝到 /usr/local/mysql目录 创建 data、logs 目录： 1mkdir -p /usr/local/mysql/data /usr/local/mysql/logs 修改 /etc/my.cnf文件，若没有改文件则创建 12345678910111213[client]socket=/usr/local/mysql/mysql.sock[mysqld]port=3306basedir=/usr/local/mysqldatadir=/usr/local/mysql/datasocket=/usr/local/mysql/mysql.socksymbolic-links=0[mysqld_safe]log-error=/usr/local/mysql/logs/mysql.logpid-file=/usr/local/mysql/mysql.pid 创建mysql用户组及其用户 12groupadd mysqluseradd -r -g mysql mysql 赋予目录相应权限 12chown -R mysql /usr/local/mysql/chgrp -R mysql /usr/local/mysql/ 修改环境变量，增加mysql路径 12MYSQL_HOME=/usr/local/mysqlexport PATH=$MYSQL_HOME/bin:$PATH 初始化，并记录下初始化的root用户密码 1mysqld --initialize --user=mysql --basedir=/usr/local/mysql/ --datadir=/usr/local/mysql/data/ 已安全方式启动mysql，该方式启动可保证mysql进程异常后会自动重启 1mysqld_safe --user=mysql 加入系统自动启动 12cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqldchkconfig mysqld on 用root账户登录，并修改初始密码 12mysql -uroot -palter user root@localhost identified by 'tiger';","categories":[],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://www.iqoo.cn/tags/mysql/"}]},{"title":"Flyway--数据库版本管理利器","slug":"Flyway-数据库版本管理利器","date":"2018-05-25T01:42:00.000Z","updated":"2018-05-25T01:43:21.391Z","comments":true,"path":"2018/05/25/Flyway-数据库版本管理利器/","link":"","permalink":"http://www.iqoo.cn/2018/05/25/Flyway-数据库版本管理利器/","excerpt":"","text":"Flyway–数据库版本管理利器 url: https://blog.csdn.net/u014091123/article/details/78133522","categories":[{"name":"database","slug":"database","permalink":"http://www.iqoo.cn/categories/database/"}],"tags":[{"name":"database","slug":"database","permalink":"http://www.iqoo.cn/tags/database/"}]},{"title":"docker入门","slug":"docker入门","date":"2018-05-24T17:28:00.000Z","updated":"2018-05-24T17:29:52.540Z","comments":true,"path":"2018/05/25/docker入门/","link":"","permalink":"http://www.iqoo.cn/2018/05/25/docker入门/","excerpt":"","text":"docker入门 docker安装docker调试docker run -t -i e98d2c152d1d /bin/bash","categories":[{"name":"operation","slug":"operation","permalink":"http://www.iqoo.cn/categories/operation/"}],"tags":[{"name":"docker","slug":"docker","permalink":"http://www.iqoo.cn/tags/docker/"}]},{"title":"logback-spring配置","slug":"logback-spring配置","date":"2018-05-14T14:43:00.000Z","updated":"2018-05-15T02:47:58.120Z","comments":true,"path":"2018/05/14/logback-spring配置/","link":"","permalink":"http://www.iqoo.cn/2018/05/14/logback-spring配置/","excerpt":"","text":"配置样例 设置logback的配置，与spring-boot配合，完成zipkin的特殊需求。 示例代码如下： &lt;include resource=&quot;org/springframework/boot/logging/logback/defaults.xml&quot;/&gt;是关键 springProperty 的设置也很有用 1234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;configuration&gt; &lt;include resource=\"org/springframework/boot/logging/logback/defaults.xml\"/&gt; &lt;springProperty scope=\"context\" name=\"springAppName\" source=\"spring.application.name\"/&gt; &lt;!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 --&gt; &lt;property name=\"LOG_HOME\" value=\"$&#123;catalina.base&#125;/logs\" /&gt; &lt;!--项目名称 --&gt; &lt;property name=\"PRO_NAME\" value=\"micro-order\" /&gt; &lt;!--&lt;property name=\"CONSOLE_LOG_PATTERN\" value=\"%clr(%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;)&#123;faint&#125; %clr($&#123;LOG_LEVEL_PATTERN:-%5p&#125;) %clr($&#123;PID:- &#125;)&#123;magenta&#125; %clr(-&amp;#45;&amp;#45;)&#123;faint&#125; %clr([%15.15t])&#123;faint&#125; %clr(%-40.40logger&#123;39&#125;)&#123;cyan&#125; %clr(:)&#123;faint&#125; %m%n$&#123;LOG_EXCEPTION_CONVERSION_WORD:-%wEx&#125;\"/&gt;--&gt; &lt;property name=\"CONSOLE_LOG_PATTERN\" value=\"%clr(%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;)&#123;faint&#125; %clr([$&#123;springAppName&#125;,traceId=%X&#123;X-B3-TraceId:-&#125;,spanId=%X&#123;X-B3-SpanId:-&#125;,%X&#123;X-Span-Export:-&#125;]) %clr($&#123;PID:- &#125;)&#123;magenta&#125; %clr(---)&#123;faint&#125; %clr([%15.15t])&#123;faint&#125; %clr(%-40.40logger&#123;39&#125;)&#123;cyan&#125; %clr(:)&#123;faint&#125; %m%n$&#123;LOG_EXCEPTION_CONVERSION_WORD:-%wEx&#125;\"/&gt; &lt;property name=\"CUST_FILE_LOG_PATTERN\" value=\"%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [$&#123;springAppName&#125;,traceId=%X&#123;X-B3-TraceId:-&#125;, spanId=%X&#123;X-B3-SpanId:-&#125;] $&#123;PID:- &#125; --- [%t] %-40.40logger&#123;39&#125; : %m%n$&#123;LOG_EXCEPTION_CONVERSION_WORD:-%wEx&#125;&#125;\"/&gt; &lt;!-- 控制台输出 --&gt; &lt;appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\"&gt; &lt;encoder&gt; &lt;!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 --&gt; &lt;pattern&gt;$&#123;CONSOLE_LOG_PATTERN&#125;&lt;/pattern&gt; &lt;charset&gt;utf8&lt;/charset&gt; &lt;/encoder&gt; &lt;/appender&gt; &lt;!-- 按照每天生成日志文件 --&gt; &lt;appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\"&gt; &lt;file&gt;$&#123;LOG_HOME&#125;/$&#123;PRO_NAME&#125;/order-server.log&lt;/file&gt; &lt;rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\"&gt; &lt;fileNamePattern&gt;$&#123;LOG_HOME&#125;/$&#123;PRO_NAME&#125;/order-server.%d&#123;yyyy-MM-dd&#125;.log&lt;/fileNamePattern&gt; &lt;maxHistory&gt;10&lt;/maxHistory&gt; &lt;/rollingPolicy&gt; &lt;encoder&gt; &lt;pattern&gt;$&#123;CUST_FILE_LOG_PATTERN&#125;&lt;/pattern&gt; &lt;charset&gt;utf8&lt;/charset&gt; &lt;/encoder&gt; &lt;/appender&gt; &lt;!-- 日志输出级别 ERROR,WARN,INFO,DEBUG --&gt; &lt;root level=\"INFO\"&gt; &lt;appender-ref ref=\"STDOUT\" /&gt; &lt;appender-ref ref=\"FILE\" /&gt; &lt;/root&gt;&lt;/configuration&gt;","categories":[{"name":"java","slug":"java","permalink":"http://www.iqoo.cn/categories/java/"}],"tags":[{"name":"java, logback","slug":"java-logback","permalink":"http://www.iqoo.cn/tags/java-logback/"}]},{"title":"spring-boot配置大全","slug":"pring-boot配置大全","date":"2018-05-13T21:37:46.000Z","updated":"2018-05-14T09:43:54.064Z","comments":true,"path":"2018/05/14/pring-boot配置大全/","link":"","permalink":"http://www.iqoo.cn/2018/05/14/pring-boot配置大全/","excerpt":"","text":"spring 配置大全 spring-boot 官方提供的配置大全参考：https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html eureka 配置参考：https://www.cnblogs.com/fangfuhai/p/7070325.html","categories":[],"tags":[]},{"title":"shadowsocks","slug":"shadowsocks","date":"2018-05-13T21:24:00.000Z","updated":"2018-05-14T09:36:43.003Z","comments":true,"path":"2018/05/14/shadowsocks/","link":"","permalink":"http://www.iqoo.cn/2018/05/14/shadowsocks/","excerpt":"","text":"梯子介绍 搬瓦工注册并购买主机: http://banwagong.cn/ 主机管理地址：https://bwh1.net/clientarea.php 配置修改： /etc/shadowsocks-python/config.json 操作命令：/etc/init.d/shadowsocks-python status | restart | stop 将以下内容保存为脚本 shadowsocks-all.sh，执行usr/bin/env bash## Auto install Shadowsocks Server (all version)## Copyright (C) 2016-2018 Teddysun &lt;i@teddysun.com&gt;## System Required: CentOS 6+, Debian7+, Ubuntu12+## Reference URL:# https://github.com/shadowsocks/shadowsocks# https://github.com/shadowsocks/shadowsocks-go# https://github.com/shadowsocks/shadowsocks-libev# https://github.com/shadowsocks/shadowsocks-windows# https://github.com/shadowsocksr-rm/shadowsocksr# https://github.com/shadowsocksrr/shadowsocksr# https://github.com/shadowsocksrr/shadowsocksr-csharp## Thanks:# @clowwindy &lt;https://twitter.com/clowwindy&gt;# @breakwa11 &lt;https://twitter.com/breakwa11&gt;# @cyfdecyf &lt;https://twitter.com/cyfdecyf&gt;# @madeye &lt;https://github.com/madeye&gt;# @linusyang &lt;https://github.com/linusyang&gt;# @Akkariiin &lt;https://github.com/Akkariiin&gt;# # Intro: https://teddysun.com/486.htmlPATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/binexport PATHred='\\033[0;31m'green='\\033[0;32m'yellow='\\033[0;33m'plain='\\033[0m'[[ $EUID -ne 0 ]] &amp;&amp; echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] This script must be run as root!\" &amp;&amp; exit 1cur_dir=$( pwd )software=(Shadowsocks-Python ShadowsocksR Shadowsocks-Go Shadowsocks-libev)libsodium_file=\"libsodium-1.0.16\"libsodium_url=\"https://github.com/jedisct1/libsodium/releases/download/1.0.16/libsodium-1.0.16.tar.gz\"mbedtls_file=\"mbedtls-2.6.0\"mbedtls_url=\"https://tls.mbed.org/download/mbedtls-2.6.0-gpl.tgz\"shadowsocks_python_file=\"shadowsocks-master\"shadowsocks_python_url=\"https://github.com/shadowsocks/shadowsocks/archive/master.zip\"shadowsocks_python_init=\"/etc/init.d/shadowsocks-python\"shadowsocks_python_config=\"/etc/shadowsocks-python/config.json\"shadowsocks_python_centos=\"https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks\"shadowsocks_python_debian=\"https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-debian\"shadowsocks_r_file=\"shadowsocksr-3.2.1\"shadowsocks_r_url=\"https://github.com/shadowsocksrr/shadowsocksr/archive/3.2.1.tar.gz\"shadowsocks_r_init=\"/etc/init.d/shadowsocks-r\"shadowsocks_r_config=\"/etc/shadowsocks-r/config.json\"shadowsocks_r_centos=\"https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR\"shadowsocks_r_debian=\"https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR-debian\"shadowsocks_go_file_64=\"shadowsocks-server-linux64-1.2.1\"shadowsocks_go_url_64=\"https://dl.lamp.sh/shadowsocks/shadowsocks-server-linux64-1.2.1.gz\"shadowsocks_go_file_32=\"shadowsocks-server-linux32-1.2.1\"shadowsocks_go_url_32=\"https://dl.lamp.sh/shadowsocks/shadowsocks-server-linux32-1.2.1.gz\"shadowsocks_go_init=\"/etc/init.d/shadowsocks-go\"shadowsocks_go_config=\"/etc/shadowsocks-go/config.json\"shadowsocks_go_centos=\"https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-go\"shadowsocks_go_debian=\"https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-go-debian\"shadowsocks_libev_init=\"/etc/init.d/shadowsocks-libev\"shadowsocks_libev_config=\"/etc/shadowsocks-libev/config.json\"shadowsocks_libev_centos=\"https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-libev\"shadowsocks_libev_debian=\"https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-libev-debian\"# Stream Cipherscommon_ciphers=(aes-256-gcmaes-192-gcmaes-128-gcmaes-256-ctraes-192-ctraes-128-ctraes-256-cfbaes-192-cfbaes-128-cfbcamellia-128-cfbcamellia-192-cfbcamellia-256-cfbxchacha20-ietf-poly1305chacha20-ietf-poly1305chacha20-ietfchacha20salsa20rc4-md5)go_ciphers=(aes-256-cfbaes-192-cfbaes-128-cfbaes-256-ctraes-192-ctraes-128-ctrchacha20-ietfchacha20salsa20rc4-md5)r_ciphers=(noneaes-256-cfbaes-192-cfbaes-128-cfbaes-256-cfb8aes-192-cfb8aes-128-cfb8aes-256-ctraes-192-ctraes-128-ctrchacha20-ietfchacha20salsa20xchacha20xsalsa20rc4-md5)# Reference URL:# https://github.com/shadowsocksr-rm/shadowsocks-rss/blob/master/ssr.md# https://github.com/shadowsocksrr/shadowsocksr/commit/a3cf0254508992b7126ab1151df0c2f10bf82680# Protocolprotocols=(originverify_deflateauth_sha1_v4auth_sha1_v4_compatibleauth_aes128_md5auth_aes128_sha1auth_chain_aauth_chain_bauth_chain_cauth_chain_dauth_chain_eauth_chain_f)# obfsobfs=(plainhttp_simplehttp_simple_compatiblehttp_posthttp_post_compatibletls1.2_ticket_authtls1.2_ticket_auth_compatibletls1.2_ticket_fastauthtls1.2_ticket_fastauth_compatible)# libev obfuscatingobfs_libev=(http tls)# initialization parameterlibev_obfs=\"\"disable_selinux() &#123; if [ -s /etc/selinux/config ] &amp;&amp; grep 'SELINUX=enforcing' /etc/selinux/config; then sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config setenforce 0 fi&#125;check_sys() &#123; local checkType=$1 local value=$2 local release='' local systemPackage='' if [ -f /etc/redhat-release ]; then release=\"centos\" systemPackage=\"yum\" elif cat /etc/issue | grep -Eqi \"debian\"; then release=\"debian\" systemPackage=\"apt\" elif cat /etc/issue | grep -Eqi \"ubuntu\"; then release=\"ubuntu\" systemPackage=\"apt\" elif cat /etc/issue | grep -Eqi \"centos|red hat|redhat\"; then release=\"centos\" systemPackage=\"yum\" elif cat /proc/version | grep -Eqi \"debian\"; then release=\"debian\" systemPackage=\"apt\" elif cat /proc/version | grep -Eqi \"ubuntu\"; then release=\"ubuntu\" systemPackage=\"apt\" elif cat /proc/version | grep -Eqi \"centos|red hat|redhat\"; then release=\"centos\" systemPackage=\"yum\" fi if [ $&#123;checkType&#125; == \"sysRelease\" ]; then if [ \"$value\" == \"$release\" ]; then return 0 else return 1 fi elif [ $&#123;checkType&#125; == \"packageManager\" ]; then if [ \"$value\" == \"$systemPackage\" ]; then return 0 else return 1 fi fi&#125;version_ge()&#123; test \"$(echo \"$@\" | tr \" \" \"\\n\" | sort -rV | head -n 1)\" == \"$1\"&#125;version_gt()&#123; test \"$(echo \"$@\" | tr \" \" \"\\n\" | sort -V | head -n 1)\" != \"$1\"&#125;check_kernel_version() &#123; local kernel_version=$(uname -r | cut -d- -f1) if version_gt $&#123;kernel_version&#125; 3.7.0; then return 0 else return 1 fi&#125;getversion() &#123; if [[ -s /etc/redhat-release ]]; then grep -oE \"[0-9.]+\" /etc/redhat-release else grep -oE \"[0-9.]+\" /etc/issue fi&#125;centosversion() &#123; if check_sys sysRelease centos; then local code=$1 local version=\"$(getversion)\" local main_ver=$&#123;version%%.*&#125; if [ \"$main_ver\" == \"$code\" ]; then return 0 else return 1 fi else return 1 fi&#125;autoconf_version()&#123; if [ ! \"$(command -v autoconf)\" ]; then echo -e \"[$&#123;green&#125;Info$&#123;plain&#125;] Starting install autoconf...\" if check_sys packageManager yum; then yum install -y autoconf &gt; /dev/null 2&gt;&amp;1 elif check_sys packageManager apt; then apt-get -y update &gt; /dev/null 2&gt;&amp;1 apt-get -y install autoconf &gt; /dev/null 2&gt;&amp;1 fi echo -e \"[$&#123;green&#125;Info$&#123;plain&#125;] Install autoconf completed.\" fi local autoconf_ver=$(autoconf --version | grep autoconf | grep -oE \"[0-9.]+\") if version_ge $&#123;autoconf_ver&#125; 2.67; then return 0 else return 1 fi&#125;get_ip() &#123; local IP=$( ip addr | egrep -o '[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;\\.[0-9]&#123;1,3&#125;' | egrep -v \"^192\\.168|^172\\.1[6-9]\\.|^172\\.2[0-9]\\.|^172\\.3[0-2]\\.|^10\\.|^127\\.|^255\\.|^0\\.\" | head -n 1 ) [ -z $&#123;IP&#125; ] &amp;&amp; IP=$( wget -qO- -t1 -T2 ipv4.icanhazip.com ) [ -z $&#123;IP&#125; ] &amp;&amp; IP=$( wget -qO- -t1 -T2 ipinfo.io/ip ) [ ! -z $&#123;IP&#125; ] &amp;&amp; echo $&#123;IP&#125; || echo&#125;get_ipv6()&#123; local ipv6=$(wget -qO- -t1 -T2 ipv6.icanhazip.com) [ -z $&#123;ipv6&#125; ] &amp;&amp; return 1 || return 0&#125;get_libev_ver()&#123; libev_ver=$(wget --no-check-certificate -qO- https://api.github.com/repos/shadowsocks/shadowsocks-libev/releases/latest | grep 'tag_name' | cut -d\\\" -f4) [ -z $&#123;libev_ver&#125; ] &amp;&amp; echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Get shadowsocks-libev latest version failed\" &amp;&amp; exit 1&#125;get_opsy()&#123; [ -f /etc/redhat-release ] &amp;&amp; awk '&#123;print ($1,$3~/^[0-9]/?$3:$4)&#125;' /etc/redhat-release &amp;&amp; return [ -f /etc/os-release ] &amp;&amp; awk -F'[= \"]' '/PRETTY_NAME/&#123;print $3,$4,$5&#125;' /etc/os-release &amp;&amp; return [ -f /etc/lsb-release ] &amp;&amp; awk -F'[=\"]+' '/DESCRIPTION/&#123;print $2&#125;' /etc/lsb-release &amp;&amp; return&#125;is_64bit() &#123; if [ `getconf WORD_BIT` = '32' ] &amp;&amp; [ `getconf LONG_BIT` = '64' ] ; then return 0 else return 1 fi&#125;debianversion()&#123; if check_sys sysRelease debian;then local version=$( get_opsy ) local code=$&#123;1&#125; local main_ver=$( echo $&#123;version&#125; | sed 's/[^0-9]//g') if [ \"$&#123;main_ver&#125;\" == \"$&#123;code&#125;\" ];then return 0 else return 1 fi else return 1 fi&#125;download() &#123; local filename=$(basename $1) if [ -f $&#123;1&#125; ]; then echo \"$&#123;filename&#125; [found]\" else echo \"$&#123;filename&#125; not found, download now...\" wget --no-check-certificate -c -t3 -T60 -O $&#123;1&#125; $&#123;2&#125; if [ $? -ne 0 ]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Download $&#123;filename&#125; failed.\" exit 1 fi fi&#125;download_files() &#123; cd $&#123;cur_dir&#125; if [ \"$&#123;selected&#125;\" == \"1\" ]; then download \"$&#123;shadowsocks_python_file&#125;.zip\" \"$&#123;shadowsocks_python_url&#125;\" if check_sys packageManager yum; then download \"$&#123;shadowsocks_python_init&#125;\" \"$&#123;shadowsocks_python_centos&#125;\" elif check_sys packageManager apt; then download \"$&#123;shadowsocks_python_init&#125;\" \"$&#123;shadowsocks_python_debian&#125;\" fi elif [ \"$&#123;selected&#125;\" == \"2\" ]; then download \"$&#123;shadowsocks_r_file&#125;.tar.gz\" \"$&#123;shadowsocks_r_url&#125;\" if check_sys packageManager yum; then download \"$&#123;shadowsocks_r_init&#125;\" \"$&#123;shadowsocks_r_centos&#125;\" elif check_sys packageManager apt; then download \"$&#123;shadowsocks_r_init&#125;\" \"$&#123;shadowsocks_r_debian&#125;\" fi elif [ \"$&#123;selected&#125;\" == \"3\" ]; then if is_64bit; then download \"$&#123;shadowsocks_go_file_64&#125;.gz\" \"$&#123;shadowsocks_go_url_64&#125;\" else download \"$&#123;shadowsocks_go_file_32&#125;.gz\" \"$&#123;shadowsocks_go_url_32&#125;\" fi if check_sys packageManager yum; then download \"$&#123;shadowsocks_go_init&#125;\" \"$&#123;shadowsocks_go_centos&#125;\" elif check_sys packageManager apt; then download \"$&#123;shadowsocks_go_init&#125;\" \"$&#123;shadowsocks_go_debian&#125;\" fi elif [ \"$&#123;selected&#125;\" == \"4\" ]; then get_libev_ver shadowsocks_libev_file=\"shadowsocks-libev-$(echo $&#123;libev_ver&#125; | sed -e 's/^[a-zA-Z]//g')\" shadowsocks_libev_url=\"https://github.com/shadowsocks/shadowsocks-libev/releases/download/$&#123;libev_ver&#125;/$&#123;shadowsocks_libev_file&#125;.tar.gz\" download \"$&#123;shadowsocks_libev_file&#125;.tar.gz\" \"$&#123;shadowsocks_libev_url&#125;\" if check_sys packageManager yum; then download \"$&#123;shadowsocks_libev_init&#125;\" \"$&#123;shadowsocks_libev_centos&#125;\" elif check_sys packageManager apt; then download \"$&#123;shadowsocks_libev_init&#125;\" \"$&#123;shadowsocks_libev_debian&#125;\" fi fi&#125;get_char() &#123; SAVEDSTTY=`stty -g` stty -echo stty cbreak dd if=/dev/tty bs=1 count=1 2&gt; /dev/null stty -raw stty echo stty $SAVEDSTTY&#125;error_detect_depends()&#123; local command=$1 local depend=`echo \"$&#123;command&#125;\" | awk '&#123;print $4&#125;'` $&#123;command&#125; if [ $? != 0 ]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Failed to install $&#123;red&#125;$&#123;depend&#125;$&#123;plain&#125;\" echo \"Please visit: https://teddysun.com/486.html and contact.\" exit 1 fi&#125;config_firewall() &#123; if centosversion 6; then /etc/init.d/iptables status &gt; /dev/null 2&gt;&amp;1 if [ $? -eq 0 ]; then iptables -L -n | grep -i $&#123;shadowsocksport&#125; &gt; /dev/null 2&gt;&amp;1 if [ $? -ne 0 ]; then iptables -I INPUT -m state --state NEW -m tcp -p tcp --dport $&#123;shadowsocksport&#125; -j ACCEPT iptables -I INPUT -m state --state NEW -m udp -p udp --dport $&#123;shadowsocksport&#125; -j ACCEPT /etc/init.d/iptables save /etc/init.d/iptables restart else echo -e \"[$&#123;green&#125;Info$&#123;plain&#125;] port $&#123;green&#125;$&#123;shadowsocksport&#125;$&#123;plain&#125; already be enabled.\" fi else echo -e \"[$&#123;yellow&#125;Warning$&#123;plain&#125;] iptables looks like not running or not installed, please enable port $&#123;shadowsocksport&#125; manually if necessary.\" fi elif centosversion 7; then systemctl status firewalld &gt; /dev/null 2&gt;&amp;1 if [ $? -eq 0 ]; then firewall-cmd --permanent --zone=public --add-port=$&#123;shadowsocksport&#125;/tcp firewall-cmd --permanent --zone=public --add-port=$&#123;shadowsocksport&#125;/udp firewall-cmd --reload else echo -e \"[$&#123;yellow&#125;Warning$&#123;plain&#125;] firewalld looks like not running or not installed, please enable port $&#123;shadowsocksport&#125; manually if necessary.\" fi fi&#125;config_shadowsocks() &#123;if check_kernel_version; then fast_open=\"true\"else fast_open=\"false\"fiif [ \"$&#123;selected&#125;\" == \"1\" ]; then if [ ! -d \"$(dirname $&#123;shadowsocks_python_config&#125;)\" ]; then mkdir -p $(dirname $&#123;shadowsocks_python_config&#125;) fi cat &gt; $&#123;shadowsocks_python_config&#125;&lt;&lt;-EOF&#123; \"server\":\"0.0.0.0\", \"server_port\":$&#123;shadowsocksport&#125;, \"local_address\":\"127.0.0.1\", \"local_port\":1080, \"password\":\"$&#123;shadowsockspwd&#125;\", \"timeout\":300, \"method\":\"$&#123;shadowsockscipher&#125;\", \"fast_open\":$&#123;fast_open&#125;&#125;EOFelif [ \"$&#123;selected&#125;\" == \"2\" ]; then if [ ! -d \"$(dirname $&#123;shadowsocks_r_config&#125;)\" ]; then mkdir -p $(dirname $&#123;shadowsocks_r_config&#125;) fi cat &gt; $&#123;shadowsocks_r_config&#125;&lt;&lt;-EOF&#123; \"server\":\"0.0.0.0\", \"server_ipv6\":\"::\", \"server_port\":$&#123;shadowsocksport&#125;, \"local_address\":\"127.0.0.1\", \"local_port\":1080, \"password\":\"$&#123;shadowsockspwd&#125;\", \"timeout\":120, \"method\":\"$&#123;shadowsockscipher&#125;\", \"protocol\":\"$&#123;shadowsockprotocol&#125;\", \"protocol_param\":\"\", \"obfs\":\"$&#123;shadowsockobfs&#125;\", \"obfs_param\":\"\", \"redirect\":\"\", \"dns_ipv6\":false, \"fast_open\":$&#123;fast_open&#125;, \"workers\":1&#125;EOFelif [ \"$&#123;selected&#125;\" == \"3\" ]; then if [ ! -d \"$(dirname $&#123;shadowsocks_go_config&#125;)\" ]; then mkdir -p $(dirname $&#123;shadowsocks_go_config&#125;) fi cat &gt; $&#123;shadowsocks_go_config&#125;&lt;&lt;-EOF&#123; \"server\":\"0.0.0.0\", \"server_port\":$&#123;shadowsocksport&#125;, \"local_port\":1080, \"password\":\"$&#123;shadowsockspwd&#125;\", \"method\":\"$&#123;shadowsockscipher&#125;\", \"timeout\":300&#125;EOFelif [ \"$&#123;selected&#125;\" == \"4\" ]; then local server_value=\"\\\"0.0.0.0\\\"\" if get_ipv6; then server_value=\"[\\\"[::0]\\\",\\\"0.0.0.0\\\"]\" fi if [ ! -d \"$(dirname $&#123;shadowsocks_libev_config&#125;)\" ]; then mkdir -p $(dirname $&#123;shadowsocks_libev_config&#125;) fi if [ \"$&#123;libev_obfs&#125;\" == \"y\" ] || [ \"$&#123;libev_obfs&#125;\" == \"Y\" ]; then cat &gt; $&#123;shadowsocks_libev_config&#125;&lt;&lt;-EOF&#123; \"server\":$&#123;server_value&#125;, \"server_port\":$&#123;shadowsocksport&#125;, \"local_address\":\"127.0.0.1\", \"local_port\":1080, \"password\":\"$&#123;shadowsockspwd&#125;\", \"timeout\":300, \"method\":\"$&#123;shadowsockscipher&#125;\", \"fast_open\":$&#123;fast_open&#125;, \"plugin\":\"obfs-server --obfs $&#123;shadowsocklibev_obfs&#125;\"&#125;EOF else cat &gt; $&#123;shadowsocks_libev_config&#125;&lt;&lt;-EOF&#123; \"server\":$&#123;server_value&#125;, \"server_port\":$&#123;shadowsocksport&#125;, \"local_address\":\"127.0.0.1\", \"local_port\":1080, \"password\":\"$&#123;shadowsockspwd&#125;\", \"timeout\":300, \"method\":\"$&#123;shadowsockscipher&#125;\", \"fast_open\":$&#123;fast_open&#125;&#125;EOF fifi&#125;install_dependencies() &#123; if check_sys packageManager yum; then echo -e \"[$&#123;green&#125;Info$&#123;plain&#125;] Checking the EPEL repository...\" if [ ! -f /etc/yum.repos.d/epel.repo ]; then yum install -y -q epel-release fi [ ! -f /etc/yum.repos.d/epel.repo ] &amp;&amp; echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Install EPEL repository failed, please check it.\" &amp;&amp; exit 1 [ ! \"$(command -v yum-config-manager)\" ] &amp;&amp; yum install -y -q yum-utils if [ x\"`yum-config-manager epel | grep -w enabled | awk '&#123;print $3&#125;'`\" != x\"True\" ]; then yum-config-manager --enable epel fi echo -e \"[$&#123;green&#125;Info$&#123;plain&#125;] Checking the EPEL repository complete...\" yum_depends=( unzip gzip openssl openssl-devel gcc python python-devel python-setuptools pcre pcre-devel libtool libevent autoconf automake make curl curl-devel zlib-devel perl perl-devel cpio expat-devel gettext-devel libev-devel c-ares-devel git qrencode ) for depend in $&#123;yum_depends[@]&#125;; do error_detect_depends \"yum -y install $&#123;depend&#125;\" done elif check_sys packageManager apt; then apt_depends=( gettext build-essential unzip gzip python python-dev python-setuptools curl openssl libssl-dev autoconf automake libtool gcc make perl cpio libpcre3 libpcre3-dev zlib1g-dev libev-dev libc-ares-dev git qrencode ) apt-get -y update for depend in $&#123;apt_depends[@]&#125;; do error_detect_depends \"apt-get -y install $&#123;depend&#125;\" done fi&#125;install_check() &#123; if check_sys packageManager yum || check_sys packageManager apt; then if centosversion 5; then return 1 fi return 0 else return 1 fi&#125;install_select() &#123; if ! install_check; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Your OS is not supported to run it!\" echo \"Please change to CentOS 6+/Debian 7+/Ubuntu 12+ and try again.\" exit 1 fi clear while true do echo \"Which Shadowsocks server you'd select:\" for ((i=1;i&lt;=$&#123;#software[@]&#125;;i++ )); do hint=\"$&#123;software[$i-1]&#125;\" echo -e \"$&#123;green&#125;$&#123;i&#125;$&#123;plain&#125;) $&#123;hint&#125;\" done read -p \"Please enter a number (Default $&#123;software[0]&#125;):\" selected [ -z \"$&#123;selected&#125;\" ] &amp;&amp; selected=\"1\" case \"$&#123;selected&#125;\" in 1|2|3|4) echo echo \"You choose = $&#123;software[$&#123;selected&#125;-1]&#125;\" echo break ;; *) echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Please only enter a number [1-4]\" ;; esac done&#125;install_prepare_password() &#123; echo \"Please enter password for $&#123;software[$&#123;selected&#125;-1]&#125;\" read -p \"(Default password: teddysun.com):\" shadowsockspwd [ -z \"$&#123;shadowsockspwd&#125;\" ] &amp;&amp; shadowsockspwd=\"teddysun.com\" echo echo \"password = $&#123;shadowsockspwd&#125;\" echo&#125;install_prepare_port() &#123; while true do dport=$(shuf -i 9000-19999 -n 1) echo -e \"Please enter a port for $&#123;software[$&#123;selected&#125;-1]&#125; [1-65535]\" read -p \"(Default port: $&#123;dport&#125;):\" shadowsocksport [ -z \"$&#123;shadowsocksport&#125;\" ] &amp;&amp; shadowsocksport=$&#123;dport&#125; expr $&#123;shadowsocksport&#125; + 1 &amp;&gt;/dev/null if [ $? -eq 0 ]; then if [ $&#123;shadowsocksport&#125; -ge 1 ] &amp;&amp; [ $&#123;shadowsocksport&#125; -le 65535 ] &amp;&amp; [ $&#123;shadowsocksport:0:1&#125; != 0 ]; then echo echo \"port = $&#123;shadowsocksport&#125;\" echo break fi fi echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Please enter a correct number [1-65535]\" done&#125;install_prepare_cipher() &#123; while true do echo -e \"Please select stream cipher for $&#123;software[$&#123;selected&#125;-1]&#125;:\" if [[ \"$&#123;selected&#125;\" == \"1\" || \"$&#123;selected&#125;\" == \"4\" ]]; then for ((i=1;i&lt;=$&#123;#common_ciphers[@]&#125;;i++ )); do hint=\"$&#123;common_ciphers[$i-1]&#125;\" echo -e \"$&#123;green&#125;$&#123;i&#125;$&#123;plain&#125;) $&#123;hint&#125;\" done read -p \"Which cipher you'd select(Default: $&#123;common_ciphers[0]&#125;):\" pick [ -z \"$pick\" ] &amp;&amp; pick=1 expr $&#123;pick&#125; + 1 &amp;&gt;/dev/null if [ $? -ne 0 ]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Please enter a number\" continue fi if [[ \"$pick\" -lt 1 || \"$pick\" -gt $&#123;#common_ciphers[@]&#125; ]]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Please enter a number between 1 and $&#123;#common_ciphers[@]&#125;\" continue fi shadowsockscipher=$&#123;common_ciphers[$pick-1]&#125; elif [ \"$&#123;selected&#125;\" == \"2\" ]; then for ((i=1;i&lt;=$&#123;#r_ciphers[@]&#125;;i++ )); do hint=\"$&#123;r_ciphers[$i-1]&#125;\" echo -e \"$&#123;green&#125;$&#123;i&#125;$&#123;plain&#125;) $&#123;hint&#125;\" done read -p \"Which cipher you'd select(Default: $&#123;r_ciphers[1]&#125;):\" pick [ -z \"$pick\" ] &amp;&amp; pick=2 expr $&#123;pick&#125; + 1 &amp;&gt;/dev/null if [ $? -ne 0 ]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Please enter a number\" continue fi if [[ \"$pick\" -lt 1 || \"$pick\" -gt $&#123;#r_ciphers[@]&#125; ]]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Please enter a number between 1 and $&#123;#r_ciphers[@]&#125;\" continue fi shadowsockscipher=$&#123;r_ciphers[$pick-1]&#125; elif [ \"$&#123;selected&#125;\" == \"3\" ]; then for ((i=1;i&lt;=$&#123;#go_ciphers[@]&#125;;i++ )); do hint=\"$&#123;go_ciphers[$i-1]&#125;\" echo -e \"$&#123;green&#125;$&#123;i&#125;$&#123;plain&#125;) $&#123;hint&#125;\" done read -p \"Which cipher you'd select(Default: $&#123;go_ciphers[0]&#125;):\" pick [ -z \"$pick\" ] &amp;&amp; pick=1 expr $&#123;pick&#125; + 1 &amp;&gt;/dev/null if [ $? -ne 0 ]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Please enter a number\" continue fi if [[ \"$pick\" -lt 1 || \"$pick\" -gt $&#123;#go_ciphers[@]&#125; ]]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Please enter a number between 1 and $&#123;#go_ciphers[@]&#125;\" continue fi shadowsockscipher=$&#123;go_ciphers[$pick-1]&#125; fi echo echo \"cipher = $&#123;shadowsockscipher&#125;\" echo break done&#125;install_prepare_protocol() &#123; while true do echo -e \"Please select protocol for $&#123;software[$&#123;selected&#125;-1]&#125;:\" for ((i=1;i&lt;=$&#123;#protocols[@]&#125;;i++ )); do hint=\"$&#123;protocols[$i-1]&#125;\" echo -e \"$&#123;green&#125;$&#123;i&#125;$&#123;plain&#125;) $&#123;hint&#125;\" done read -p \"Which protocol you'd select(Default: $&#123;protocols[0]&#125;):\" protocol [ -z \"$protocol\" ] &amp;&amp; protocol=1 expr $&#123;protocol&#125; + 1 &amp;&gt;/dev/null if [ $? -ne 0 ]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Please enter a number\" continue fi if [[ \"$protocol\" -lt 1 || \"$protocol\" -gt $&#123;#protocols[@]&#125; ]]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Please enter a number between 1 and $&#123;#protocols[@]&#125;\" continue fi shadowsockprotocol=$&#123;protocols[$protocol-1]&#125; echo echo \"protocol = $&#123;shadowsockprotocol&#125;\" echo break done&#125;install_prepare_obfs() &#123; while true do echo -e \"Please select obfs for $&#123;software[$&#123;selected&#125;-1]&#125;:\" for ((i=1;i&lt;=$&#123;#obfs[@]&#125;;i++ )); do hint=\"$&#123;obfs[$i-1]&#125;\" echo -e \"$&#123;green&#125;$&#123;i&#125;$&#123;plain&#125;) $&#123;hint&#125;\" done read -p \"Which obfs you'd select(Default: $&#123;obfs[0]&#125;):\" r_obfs [ -z \"$r_obfs\" ] &amp;&amp; r_obfs=1 expr $&#123;r_obfs&#125; + 1 &amp;&gt;/dev/null if [ $? -ne 0 ]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Please enter a number\" continue fi if [[ \"$r_obfs\" -lt 1 || \"$r_obfs\" -gt $&#123;#obfs[@]&#125; ]]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Please enter a number between 1 and $&#123;#obfs[@]&#125;\" continue fi shadowsockobfs=$&#123;obfs[$r_obfs-1]&#125; echo echo \"obfs = $&#123;shadowsockobfs&#125;\" echo break done&#125;install_prepare_libev_obfs() &#123; if autoconf_version; then while true do echo -e \"Do you want install simple-obfs for $&#123;software[$&#123;selected&#125;-1]&#125;? [y/n]\" read -p \"(default: n):\" libev_obfs [ -z \"$libev_obfs\" ] &amp;&amp; libev_obfs=n case \"$&#123;libev_obfs&#125;\" in y|Y|n|N) echo echo \"You choose = $&#123;libev_obfs&#125;\" echo break ;; *) echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Please only enter [y/n]\" ;; esac done if [ \"$&#123;libev_obfs&#125;\" == \"y\" ] || [ \"$&#123;libev_obfs&#125;\" == \"Y\" ]; then while true do echo -e \"Please select obfs for simple-obfs:\" for ((i=1;i&lt;=$&#123;#obfs_libev[@]&#125;;i++ )); do hint=\"$&#123;obfs_libev[$i-1]&#125;\" echo -e \"$&#123;green&#125;$&#123;i&#125;$&#123;plain&#125;) $&#123;hint&#125;\" done read -p \"Which obfs you'd select(Default: $&#123;obfs_libev[0]&#125;):\" r_libev_obfs [ -z \"$r_libev_obfs\" ] &amp;&amp; r_libev_obfs=1 expr $&#123;r_libev_obfs&#125; + 1 &amp;&gt;/dev/null if [ $? -ne 0 ]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Please enter a number\" continue fi if [[ \"$r_libev_obfs\" -lt 1 || \"$r_libev_obfs\" -gt $&#123;#obfs_libev[@]&#125; ]]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Please enter a number between 1 and $&#123;#obfs_libev[@]&#125;\" continue fi shadowsocklibev_obfs=$&#123;obfs_libev[$r_libev_obfs-1]&#125; echo echo \"obfs = $&#123;shadowsocklibev_obfs&#125;\" echo break done fi else echo -e \"[$&#123;yellow&#125;Warning$&#123;plain&#125;] autoconf version is less than 2.67, simple-obfs for $&#123;software[$&#123;selected&#125;-1]&#125; installation has been skipped\" fi&#125;install_prepare() &#123; if [[ \"$&#123;selected&#125;\" == \"1\" || \"$&#123;selected&#125;\" == \"3\" || \"$&#123;selected&#125;\" == \"4\" ]]; then install_prepare_password install_prepare_port install_prepare_cipher if [ \"$&#123;selected&#125;\" == \"4\" ]; then install_prepare_libev_obfs fi elif [ \"$&#123;selected&#125;\" == \"2\" ]; then install_prepare_password install_prepare_port install_prepare_cipher install_prepare_protocol install_prepare_obfs fi echo echo \"Press any key to start...or Press Ctrl+C to cancel\" char=`get_char`&#125;install_libsodium() &#123; if [ ! -f /usr/lib/libsodium.a ]; then cd $&#123;cur_dir&#125; download \"$&#123;libsodium_file&#125;.tar.gz\" \"$&#123;libsodium_url&#125;\" tar zxf $&#123;libsodium_file&#125;.tar.gz cd $&#123;libsodium_file&#125; ./configure --prefix=/usr &amp;&amp; make &amp;&amp; make install if [ $? -ne 0 ]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] $&#123;libsodium_file&#125; install failed.\" install_cleanup exit 1 fi else echo -e \"[$&#123;green&#125;Info$&#123;plain&#125;] $&#123;libsodium_file&#125; already installed.\" fi&#125;install_mbedtls() &#123; if [ ! -f /usr/lib/libmbedtls.a ]; then cd $&#123;cur_dir&#125; download \"$&#123;mbedtls_file&#125;-gpl.tgz\" \"$&#123;mbedtls_url&#125;\" tar xf $&#123;mbedtls_file&#125;-gpl.tgz cd $&#123;mbedtls_file&#125; make SHARED=1 CFLAGS=-fPIC make DESTDIR=/usr install if [ $? -ne 0 ]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] $&#123;mbedtls_file&#125; install failed.\" install_cleanup exit 1 fi else echo -e \"[$&#123;green&#125;Info$&#123;plain&#125;] $&#123;mbedtls_file&#125; already installed.\" fi&#125;install_shadowsocks_python() &#123; cd $&#123;cur_dir&#125; unzip -q $&#123;shadowsocks_python_file&#125;.zip if [ $? -ne 0 ];then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] unzip $&#123;shadowsocks_python_file&#125;.zip failed, please check unzip command.\" install_cleanup exit 1 fi cd $&#123;shadowsocks_python_file&#125; python setup.py install --record /usr/local/shadowsocks_python.log if [ -f /usr/bin/ssserver ] || [ -f /usr/local/bin/ssserver ]; then chmod +x $&#123;shadowsocks_python_init&#125; local service_name=$(basename $&#123;shadowsocks_python_init&#125;) if check_sys packageManager yum; then chkconfig --add $&#123;service_name&#125; chkconfig $&#123;service_name&#125; on elif check_sys packageManager apt; then update-rc.d -f $&#123;service_name&#125; defaults fi else echo echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] $&#123;software[0]&#125; install failed.\" echo \"Please visit: https://teddysun.com/486.html and contact.\" install_cleanup exit 1 fi&#125;install_shadowsocks_r() &#123; cd $&#123;cur_dir&#125; tar zxf $&#123;shadowsocks_r_file&#125;.tar.gz mv $&#123;shadowsocks_r_file&#125;/shadowsocks /usr/local/ if [ -f /usr/local/shadowsocks/server.py ]; then chmod +x $&#123;shadowsocks_r_init&#125; local service_name=$(basename $&#123;shadowsocks_r_init&#125;) if check_sys packageManager yum; then chkconfig --add $&#123;service_name&#125; chkconfig $&#123;service_name&#125; on elif check_sys packageManager apt; then update-rc.d -f $&#123;service_name&#125; defaults fi else echo echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] $&#123;software[1]&#125; install failed.\" echo \"Please visit; https://teddysun.com/486.html and contact.\" install_cleanup exit 1 fi&#125;install_shadowsocks_go() &#123; cd $&#123;cur_dir&#125; if is_64bit; then gzip -d $&#123;shadowsocks_go_file_64&#125;.gz if [ $? -ne 0 ];then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Decompress $&#123;shadowsocks_go_file_64&#125;.gz failed.\" install_cleanup exit 1 fi mv -f $&#123;shadowsocks_go_file_64&#125; /usr/bin/shadowsocks-server else gzip -d $&#123;shadowsocks_go_file_32&#125;.gz if [ $? -ne 0 ];then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Decompress $&#123;shadowsocks_go_file_32&#125;.gz failed.\" install_cleanup exit 1 fi mv -f $&#123;shadowsocks_go_file_32&#125; /usr/bin/shadowsocks-server fi if [ -f /usr/bin/shadowsocks-server ]; then chmod +x /usr/bin/shadowsocks-server chmod +x $&#123;shadowsocks_go_init&#125; local service_name=$(basename $&#123;shadowsocks_go_init&#125;) if check_sys packageManager yum; then chkconfig --add $&#123;service_name&#125; chkconfig $&#123;service_name&#125; on elif check_sys packageManager apt; then update-rc.d -f $&#123;service_name&#125; defaults fi else echo echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] $&#123;software[2]&#125; install failed.\" echo \"Please visit: https://teddysun.com/486.html and contact.\" install_cleanup exit 1 fi&#125;install_shadowsocks_libev() &#123; cd $&#123;cur_dir&#125; tar zxf $&#123;shadowsocks_libev_file&#125;.tar.gz cd $&#123;shadowsocks_libev_file&#125; ./configure --disable-documentation &amp;&amp; make &amp;&amp; make install if [ $? -eq 0 ]; then chmod +x $&#123;shadowsocks_libev_init&#125; local service_name=$(basename $&#123;shadowsocks_libev_init&#125;) if check_sys packageManager yum; then chkconfig --add $&#123;service_name&#125; chkconfig $&#123;service_name&#125; on elif check_sys packageManager apt; then update-rc.d -f $&#123;service_name&#125; defaults fi else echo echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] $&#123;software[3]&#125; install failed.\" echo \"Please visit: https://teddysun.com/486.html and contact.\" install_cleanup exit 1 fi&#125;install_shadowsocks_libev_obfs() &#123; if [ \"$&#123;libev_obfs&#125;\" == \"y\" ] || [ \"$&#123;libev_obfs&#125;\" == \"Y\" ]; then cd $&#123;cur_dir&#125; git clone https://github.com/shadowsocks/simple-obfs.git cd simple-obfs git submodule update --init --recursive ./autogen.sh ./configure --disable-documentation make make install if [ ! \"$(command -v obfs-server)\" ]; then echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] simple-obfs for $&#123;software[$&#123;selected&#125;-1]&#125; install failed.\" echo \"Please visit: https://teddysun.com/486.html and contact.\" install_cleanup exit 1 fi [ -f /usr/local/bin/obfs-server ] &amp;&amp; ln -s /usr/local/bin/obfs-server /usr/bin fi&#125;install_completed_python() &#123; clear $&#123;shadowsocks_python_init&#125; start echo echo -e \"Congratulations, $&#123;green&#125;$&#123;software[0]&#125;$&#123;plain&#125; server install completed!\" echo -e \"Your Server IP : $&#123;red&#125; $(get_ip) $&#123;plain&#125;\" echo -e \"Your Server Port : $&#123;red&#125; $&#123;shadowsocksport&#125; $&#123;plain&#125;\" echo -e \"Your Password : $&#123;red&#125; $&#123;shadowsockspwd&#125; $&#123;plain&#125;\" echo -e \"Your Encryption Method: $&#123;red&#125; $&#123;shadowsockscipher&#125; $&#123;plain&#125;\"&#125;install_completed_r() &#123; clear $&#123;shadowsocks_r_init&#125; start echo echo -e \"Congratulations, $&#123;green&#125;$&#123;software[1]&#125;$&#123;plain&#125; server install completed!\" echo -e \"Your Server IP : $&#123;red&#125; $(get_ip) $&#123;plain&#125;\" echo -e \"Your Server Port : $&#123;red&#125; $&#123;shadowsocksport&#125; $&#123;plain&#125;\" echo -e \"Your Password : $&#123;red&#125; $&#123;shadowsockspwd&#125; $&#123;plain&#125;\" echo -e \"Your Protocol : $&#123;red&#125; $&#123;shadowsockprotocol&#125; $&#123;plain&#125;\" echo -e \"Your obfs : $&#123;red&#125; $&#123;shadowsockobfs&#125; $&#123;plain&#125;\" echo -e \"Your Encryption Method: $&#123;red&#125; $&#123;shadowsockscipher&#125; $&#123;plain&#125;\"&#125;install_completed_go() &#123; clear $&#123;shadowsocks_go_init&#125; start echo echo -e \"Congratulations, $&#123;green&#125;$&#123;software[2]&#125;$&#123;plain&#125; server install completed!\" echo -e \"Your Server IP : $&#123;red&#125; $(get_ip) $&#123;plain&#125;\" echo -e \"Your Server Port : $&#123;red&#125; $&#123;shadowsocksport&#125; $&#123;plain&#125;\" echo -e \"Your Password : $&#123;red&#125; $&#123;shadowsockspwd&#125; $&#123;plain&#125;\" echo -e \"Your Encryption Method: $&#123;red&#125; $&#123;shadowsockscipher&#125; $&#123;plain&#125;\"&#125;install_completed_libev() &#123; clear ldconfig $&#123;shadowsocks_libev_init&#125; start echo echo -e \"Congratulations, $&#123;green&#125;$&#123;software[3]&#125;$&#123;plain&#125; server install completed!\" echo -e \"Your Server IP : $&#123;red&#125; $(get_ip) $&#123;plain&#125;\" echo -e \"Your Server Port : $&#123;red&#125; $&#123;shadowsocksport&#125; $&#123;plain&#125;\" echo -e \"Your Password : $&#123;red&#125; $&#123;shadowsockspwd&#125; $&#123;plain&#125;\" if [ \"$(command -v obfs-server)\" ]; then echo -e \"Your obfs : $&#123;red&#125; $&#123;shadowsocklibev_obfs&#125; $&#123;plain&#125;\" fi echo -e \"Your Encryption Method: $&#123;red&#125; $&#123;shadowsockscipher&#125; $&#123;plain&#125;\"&#125;qr_generate_python() &#123; if [ \"$(command -v qrencode)\" ]; then local tmp=$(echo -n \"$&#123;shadowsockscipher&#125;:$&#123;shadowsockspwd&#125;@$(get_ip):$&#123;shadowsocksport&#125;\" | base64 -w0) local qr_code=\"ss://$&#123;tmp&#125;\" echo echo \"Your QR Code: (For Shadowsocks Windows, OSX, Android and iOS clients)\" echo -e \"$&#123;green&#125; $&#123;qr_code&#125; $&#123;plain&#125;\" echo -n \"$&#123;qr_code&#125;\" | qrencode -s8 -o $&#123;cur_dir&#125;/shadowsocks_python_qr.png echo \"Your QR Code has been saved as a PNG file path:\" echo -e \"$&#123;green&#125; $&#123;cur_dir&#125;/shadowsocks_python_qr.png $&#123;plain&#125;\" fi&#125;qr_generate_r() &#123; if [ \"$(command -v qrencode)\" ]; then local tmp1=$(echo -n \"$&#123;shadowsockspwd&#125;\" | base64 -w0 | sed 's/=//g;s/\\//_/g;s/+/-/g') local tmp2=$(echo -n \"$(get_ip):$&#123;shadowsocksport&#125;:$&#123;shadowsockprotocol&#125;:$&#123;shadowsockscipher&#125;:$&#123;shadowsockobfs&#125;:$&#123;tmp1&#125;/?obfsparam=\" | base64 -w0) local qr_code=\"ssr://$&#123;tmp2&#125;\" echo echo \"Your QR Code: (For ShadowsocksR Windows, Android clients only)\" echo -e \"$&#123;green&#125; $&#123;qr_code&#125; $&#123;plain&#125;\" echo -n \"$&#123;qr_code&#125;\" | qrencode -s8 -o $&#123;cur_dir&#125;/shadowsocks_r_qr.png echo \"Your QR Code has been saved as a PNG file path:\" echo -e \"$&#123;green&#125; $&#123;cur_dir&#125;/shadowsocks_r_qr.png $&#123;plain&#125;\" fi&#125;qr_generate_go() &#123; if [ \"$(command -v qrencode)\" ]; then local tmp=$(echo -n \"$&#123;shadowsockscipher&#125;:$&#123;shadowsockspwd&#125;@$(get_ip):$&#123;shadowsocksport&#125;\" | base64 -w0) local qr_code=\"ss://$&#123;tmp&#125;\" echo echo \"Your QR Code: (For Shadowsocks Windows, OSX, Android and iOS clients)\" echo -e \"$&#123;green&#125; $&#123;qr_code&#125; $&#123;plain&#125;\" echo -n \"$&#123;qr_code&#125;\" | qrencode -s8 -o $&#123;cur_dir&#125;/shadowsocks_go_qr.png echo \"Your QR Code has been saved as a PNG file path:\" echo -e \"$&#123;green&#125; $&#123;cur_dir&#125;/shadowsocks_go_qr.png $&#123;plain&#125;\" fi&#125;qr_generate_libev() &#123; if [ \"$(command -v qrencode)\" ]; then local tmp=$(echo -n \"$&#123;shadowsockscipher&#125;:$&#123;shadowsockspwd&#125;@$(get_ip):$&#123;shadowsocksport&#125;\" | base64 -w0) local qr_code=\"ss://$&#123;tmp&#125;\" echo echo \"Your QR Code: (For Shadowsocks Windows, OSX, Android and iOS clients)\" echo -e \"$&#123;green&#125; $&#123;qr_code&#125; $&#123;plain&#125;\" echo -n \"$&#123;qr_code&#125;\" | qrencode -s8 -o $&#123;cur_dir&#125;/shadowsocks_libev_qr.png echo \"Your QR Code has been saved as a PNG file path:\" echo -e \"$&#123;green&#125; $&#123;cur_dir&#125;/shadowsocks_libev_qr.png $&#123;plain&#125;\" fi&#125;install_main()&#123; install_libsodium if ! ldconfig -p | grep -wq \"/usr/lib\"; then echo \"/usr/lib\" &gt; /etc/ld.so.conf.d/lib.conf fi ldconfig if [ \"$&#123;selected&#125;\" == \"1\" ]; then install_shadowsocks_python install_completed_python qr_generate_python elif [ \"$&#123;selected&#125;\" == \"2\" ]; then install_shadowsocks_r install_completed_r qr_generate_r elif [ \"$&#123;selected&#125;\" == \"3\" ]; then install_shadowsocks_go install_completed_go qr_generate_go elif [ \"$&#123;selected&#125;\" == \"4\" ]; then install_mbedtls install_shadowsocks_libev install_shadowsocks_libev_obfs install_completed_libev qr_generate_libev fi echo echo \"Welcome to visit: https://teddysun.com/486.html\" echo \"Enjoy it!\" echo&#125;install_cleanup()&#123; cd $&#123;cur_dir&#125; rm -rf simple-obfs rm -rf $&#123;libsodium_file&#125; $&#123;libsodium_file&#125;.tar.gz rm -rf $&#123;mbedtls_file&#125; $&#123;mbedtls_file&#125;-gpl.tgz rm -rf $&#123;shadowsocks_python_file&#125; $&#123;shadowsocks_python_file&#125;.zip rm -rf $&#123;shadowsocks_r_file&#125; $&#123;shadowsocks_r_file&#125;.tar.gz rm -rf $&#123;shadowsocks_go_file_64&#125;.gz $&#123;shadowsocks_go_file_32&#125;.gz rm -rf $&#123;shadowsocks_libev_file&#125; $&#123;shadowsocks_libev_file&#125;.tar.gz&#125;install_shadowsocks()&#123; disable_selinux install_select install_prepare install_dependencies download_files config_shadowsocks if check_sys packageManager yum; then config_firewall fi install_main install_cleanup&#125;uninstall_shadowsocks_python() &#123; printf \"Are you sure uninstall $&#123;red&#125;$&#123;software[0]&#125;$&#123;plain&#125;? [y/n]\\n\" read -p \"(default: n):\" answer [ -z $&#123;answer&#125; ] &amp;&amp; answer=\"n\" if [ \"$&#123;answer&#125;\" == \"y\" ] || [ \"$&#123;answer&#125;\" == \"Y\" ]; then $&#123;shadowsocks_python_init&#125; status &gt; /dev/null 2&gt;&amp;1 if [ $? -eq 0 ]; then $&#123;shadowsocks_python_init&#125; stop fi local service_name=$(basename $&#123;shadowsocks_python_init&#125;) if check_sys packageManager yum; then chkconfig --del $&#123;service_name&#125; elif check_sys packageManager apt; then update-rc.d -f $&#123;service_name&#125; remove fi rm -fr $(dirname $&#123;shadowsocks_python_config&#125;) rm -f $&#123;shadowsocks_python_init&#125; rm -f /var/log/shadowsocks.log if [ -f /usr/local/shadowsocks_python.log ]; then cat /usr/local/shadowsocks_python.log | xargs rm -rf rm -f /usr/local/shadowsocks_python.log fi echo -e \"[$&#123;green&#125;Info$&#123;plain&#125;] $&#123;software[0]&#125; uninstall success\" else echo echo -e \"[$&#123;green&#125;Info$&#123;plain&#125;] $&#123;software[0]&#125; uninstall cancelled, nothing to do...\" echo fi&#125;uninstall_shadowsocks_r() &#123; printf \"Are you sure uninstall $&#123;red&#125;$&#123;software[1]&#125;$&#123;plain&#125;? [y/n]\\n\" read -p \"(default: n):\" answer [ -z $&#123;answer&#125; ] &amp;&amp; answer=\"n\" if [ \"$&#123;answer&#125;\" == \"y\" ] || [ \"$&#123;answer&#125;\" == \"Y\" ]; then $&#123;shadowsocks_r_init&#125; status &gt; /dev/null 2&gt;&amp;1 if [ $? -eq 0 ]; then $&#123;shadowsocks_r_init&#125; stop fi local service_name=$(basename $&#123;shadowsocks_r_init&#125;) if check_sys packageManager yum; then chkconfig --del $&#123;service_name&#125; elif check_sys packageManager apt; then update-rc.d -f $&#123;service_name&#125; remove fi rm -fr $(dirname $&#123;shadowsocks_r_config&#125;) rm -f $&#123;shadowsocks_r_init&#125; rm -f /var/log/shadowsocks.log rm -fr /usr/local/shadowsocks echo -e \"[$&#123;green&#125;Info$&#123;plain&#125;] $&#123;software[1]&#125; uninstall success\" else echo echo -e \"[$&#123;green&#125;Info$&#123;plain&#125;] $&#123;software[1]&#125; uninstall cancelled, nothing to do...\" echo fi&#125;uninstall_shadowsocks_go() &#123; printf \"Are you sure uninstall $&#123;red&#125;$&#123;software[2]&#125;$&#123;plain&#125;? [y/n]\\n\" read -p \"(default: n):\" answer [ -z $&#123;answer&#125; ] &amp;&amp; answer=\"n\" if [ \"$&#123;answer&#125;\" == \"y\" ] || [ \"$&#123;answer&#125;\" == \"Y\" ]; then $&#123;shadowsocks_go_init&#125; status &gt; /dev/null 2&gt;&amp;1 if [ $? -eq 0 ]; then $&#123;shadowsocks_go_init&#125; stop fi local service_name=$(basename $&#123;shadowsocks_go_init&#125;) if check_sys packageManager yum; then chkconfig --del $&#123;service_name&#125; elif check_sys packageManager apt; then update-rc.d -f $&#123;service_name&#125; remove fi rm -fr $(dirname $&#123;shadowsocks_go_config&#125;) rm -f $&#123;shadowsocks_go_init&#125; rm -f /usr/bin/shadowsocks-server echo -e \"[$&#123;green&#125;Info$&#123;plain&#125;] $&#123;software[2]&#125; uninstall success\" else echo echo -e \"[$&#123;green&#125;Info$&#123;plain&#125;] $&#123;software[2]&#125; uninstall cancelled, nothing to do...\" echo fi&#125;uninstall_shadowsocks_libev() &#123; printf \"Are you sure uninstall $&#123;red&#125;$&#123;software[3]&#125;$&#123;plain&#125;? [y/n]\\n\" read -p \"(default: n):\" answer [ -z $&#123;answer&#125; ] &amp;&amp; answer=\"n\" if [ \"$&#123;answer&#125;\" == \"y\" ] || [ \"$&#123;answer&#125;\" == \"Y\" ]; then $&#123;shadowsocks_libev_init&#125; status &gt; /dev/null 2&gt;&amp;1 if [ $? -eq 0 ]; then $&#123;shadowsocks_libev_init&#125; stop fi local service_name=$(basename $&#123;shadowsocks_libev_init&#125;) if check_sys packageManager yum; then chkconfig --del $&#123;service_name&#125; elif check_sys packageManager apt; then update-rc.d -f $&#123;service_name&#125; remove fi rm -fr $(dirname $&#123;shadowsocks_libev_config&#125;) rm -f /usr/local/bin/ss-local rm -f /usr/local/bin/ss-tunnel rm -f /usr/local/bin/ss-server rm -f /usr/local/bin/ss-manager rm -f /usr/local/bin/ss-redir rm -f /usr/local/bin/ss-nat rm -f /usr/local/bin/obfs-local rm -f /usr/local/bin/obfs-server rm -f /usr/local/lib/libshadowsocks-libev.a rm -f /usr/local/lib/libshadowsocks-libev.la rm -f /usr/local/include/shadowsocks.h rm -f /usr/local/lib/pkgconfig/shadowsocks-libev.pc rm -f /usr/local/share/man/man1/ss-local.1 rm -f /usr/local/share/man/man1/ss-tunnel.1 rm -f /usr/local/share/man/man1/ss-server.1 rm -f /usr/local/share/man/man1/ss-manager.1 rm -f /usr/local/share/man/man1/ss-redir.1 rm -f /usr/local/share/man/man1/ss-nat.1 rm -f /usr/local/share/man/man8/shadowsocks-libev.8 rm -fr /usr/local/share/doc/shadowsocks-libev rm -f $&#123;shadowsocks_libev_init&#125; echo -e \"[$&#123;green&#125;Info$&#123;plain&#125;] $&#123;software[3]&#125; uninstall success\" else echo echo -e \"[$&#123;green&#125;Info$&#123;plain&#125;] $&#123;software[3]&#125; uninstall cancelled, nothing to do...\" echo fi&#125;uninstall_shadowsocks() &#123; while true do echo \"Which Shadowsocks server you want to uninstall?\" for ((i=1;i&lt;=$&#123;#software[@]&#125;;i++ )); do hint=\"$&#123;software[$i-1]&#125;\" echo -e \"$&#123;green&#125;$&#123;i&#125;$&#123;plain&#125;) $&#123;hint&#125;\" done read -p \"Please enter a number [1-4]:\" un_select case \"$&#123;un_select&#125;\" in 1|2|3|4) echo echo \"You choose = $&#123;software[$&#123;un_select&#125;-1]&#125;\" echo break ;; *) echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] Please only enter a number [1-4]\" ;; esac done if [ \"$&#123;un_select&#125;\" == \"1\" ]; then if [ -f $&#123;shadowsocks_python_init&#125; ]; then uninstall_shadowsocks_python else echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] $&#123;software[$&#123;un_select&#125;-1]&#125; not installed, please check it and try again.\" echo exit 1 fi elif [ \"$&#123;un_select&#125;\" == \"2\" ]; then if [ -f $&#123;shadowsocks_r_init&#125; ]; then uninstall_shadowsocks_r else echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] $&#123;software[$&#123;un_select&#125;-1]&#125; not installed, please check it and try again.\" echo exit 1 fi elif [ \"$&#123;un_select&#125;\" == \"3\" ]; then if [ -f $&#123;shadowsocks_go_init&#125; ]; then uninstall_shadowsocks_go else echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] $&#123;software[$&#123;un_select&#125;-1]&#125; not installed, please check it and try again.\" echo exit 1 fi elif [ \"$&#123;un_select&#125;\" == \"4\" ]; then if [ -f $&#123;shadowsocks_libev_init&#125; ]; then uninstall_shadowsocks_libev else echo -e \"[$&#123;red&#125;Error$&#123;plain&#125;] $&#123;software[$&#123;un_select&#125;-1]&#125; not installed, please check it and try again.\" echo exit 1 fi fi&#125;# Initialization stepaction=$1[ -z $1 ] &amp;&amp; action=installcase \"$action\" in install|uninstall) $&#123;action&#125;_shadowsocks ;; *) echo \"Arguments error! [$&#123;action&#125;]\" echo \"Usage: `basename $0` [install|uninstall]\" ;;esac","categories":[],"tags":[{"name":"shadowsocks","slug":"shadowsocks","permalink":"http://www.iqoo.cn/tags/shadowsocks/"}]},{"title":"free-soft","slug":"free-soft","date":"2018-05-05T02:12:00.000Z","updated":"2018-06-08T02:37:01.533Z","comments":true,"path":"2018/05/05/free-soft/","link":"","permalink":"http://www.iqoo.cn/2018/05/05/free-soft/","excerpt":"","text":"windows 免费且好用的软件 MPC-HC: Media Player Classic Home Cinema 播放器 Foobar2000 播放器 7-Zip, BandZip 压缩软件 DISM++ 清理软件 FDM: Free Download Manager 下载管理器 NoSQL Manager for MongoDB mongodb的UI工具 Notepad++ 编辑器 linux-","categories":[],"tags":[]},{"title":"git使用多个ssh key","slug":"git使用多个ssh-key","date":"2018-05-04T20:22:00.000Z","updated":"2018-05-15T08:29:10.176Z","comments":true,"path":"2018/05/05/git使用多个ssh-key/","link":"","permalink":"http://www.iqoo.cn/2018/05/05/git使用多个ssh-key/","excerpt":"","text":"我们在日常工作中会遇到公司有个gitlab，还有些自己的一些项目放在github上。这样就导致我们要配置不同的ssh-key对应不同的环境。我们在日常工作中会遇到公司有个gitlab，还有些自己的一些项目放在github上。这样就导致我们要配置不同的ssh-key对应不同的环境。下面我们来看看具体的操作： 生成一个公司用的SSH-Key $ ssh-keygen -t rsa -C &quot;youremail@domain.com” -f ~/.ssh/id-rsa-gitlab 在~/.ssh/目录会生成id-rsa和id-rsa.pub私钥和公钥。 我们将id-rsa.pub中的内容粘帖到公司gitlab服务器的SSH-key的配置中。 生成一个github用的SSH-Key $ ssh-keygen -t rsa -C &quot;youremail@your.com” -f ~/.ssh/id-rsa-github 在~/.ssh/目录会生成github-rsa和github-rsa.pub私钥和公钥。 我们将github-rsa.pub中的内容粘帖到github服务器的SSH-key的配置中。 添加私钥 12$ ssh-add ~/.ssh/id-rsa-gitlab $ ssh-add ~/.ssh/id-rsa-github 如果执行ssh-add时提示”Could not open a connection to your authentication agent”，可以先执行命令： $ ssh-agent bash然后再运行ssh-add命令。1234# 可以通过 ssh-add -l 来确私钥列表$ ssh-add -l# 可以通过 ssh-add -D 来清空私钥列表$ ssh-add -D 修改配置文件在 ~/.ssh 目录下新建一个config文件1touch config 添加内容：12345678910# gitlabHost gitlab.com HostName gitlab.com PreferredAuthentications publickey IdentityFile ~/.ssh/id-rsa-gitlab# githubHost github.com HostName github.com PreferredAuthentications publickey IdentityFile ~/.ssh/id-rsa-github","categories":[{"name":"tools","slug":"tools","permalink":"http://www.iqoo.cn/categories/tools/"}],"tags":[{"name":"git","slug":"git","permalink":"http://www.iqoo.cn/tags/git/"}]},{"title":"大道至简","slug":"大道至简","date":"2018-04-22T08:54:28.000Z","updated":"2018-05-14T08:29:27.151Z","comments":true,"path":"2018/04/22/大道至简/","link":"","permalink":"http://www.iqoo.cn/2018/04/22/大道至简/","excerpt":"","text":"说明1https://www.haomwei.com/technology/maupassant-hexo.html#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95","categories":[{"name":"nodejs","slug":"nodejs","permalink":"http://www.iqoo.cn/categories/nodejs/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.iqoo.cn/tags/hexo/"}]}]}